# Stage 1: Build stage
FROM alpine:3.6

# Install build dependencies and entropy daemon
RUN apk add --no-cache \
    build-base \
    curl \
    wget \
    make \
    gcc \
    musl-dev \
    zlib-dev \
    linux-headers \
    libffi-dev \
    perl \
    nasm \
    readline-dev \
    sqlite-dev \
    gdbm-dev \
    ncurses-dev \
    tk-dev \
    zip \
    unzip \
    haveged \
    binutils \
    zlib \
    libffi \
    readline \
    sqlite \
    ncurses \
    tk \
    bash

# Ensure OpenSSL RNG uses urandom
ENV RANDFILE=/dev/urandom

# Download and build FIPS OpenSSL
ENV OPENSSL_VERSION=3.0.7
RUN curl -LO https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz && \
    tar -xvzf openssl-${OPENSSL_VERSION}.tar.gz && \
    cd openssl-${OPENSSL_VERSION} && \
    ./config enable-fips no-shared --prefix=/usr/local --openssldir=/usr/local/ssl --libdir=/usr/local/lib && \
    make -j$(nproc) && make install && \
    cd .. && rm -rf openssl-${OPENSSL_VERSION}*

# Run fipsinstall to generate fipsmodule.cnf
RUN /usr/local/bin/openssl fipsinstall \
      -module /usr/local/lib/ossl-modules/fips.so \
      -out /usr/local/ssl/fipsmodule.cnf \
      -provider_name fips

# Create FIPS-enabled openssl.cnf
RUN mkdir -p /usr/local/ssl && \
    echo "openssl_conf = openssl_init" > /usr/local/ssl/openssl.cnf && \
    echo ".include /usr/local/ssl/fipsmodule.cnf" >> /usr/local/ssl/openssl.cnf && \
    echo "[openssl_init]" >> /usr/local/ssl/openssl.cnf && \
    echo "providers = provider_sect" >> /usr/local/ssl/openssl.cnf && \
    echo "alg_section = algorithm_sect" >> /usr/local/ssl/openssl.cnf && \
    echo "[provider_sect]" >> /usr/local/ssl/openssl.cnf && \
    echo "fips = fips_sect" >> /usr/local/ssl/openssl.cnf && \
    echo "base = base_sect" >> /usr/local/ssl/openssl.cnf && \
    echo "[fips_sect]" >> /usr/local/ssl/openssl.cnf && \
    echo "activate = 1" >> /usr/local/ssl/openssl.cnf && \
    echo "[base_sect]" >> /usr/local/ssl/openssl.cnf && \
    echo "activate = 1" >> /usr/local/ssl/openssl.cnf \
    echo "[algorithm_sect]" >> /usr/local/ssl/openssl.cnf && \
    echo "default_properties = fips=yes" >> /usr/local/ssl/openssl.cnf

# Set environment for Python build
ENV LD_LIBRARY_PATH=/usr/local/lib
ENV OPENSSL_CONF=/usr/local/ssl/openssl.cnf

# Download and build Python 3.6.15
ENV PYTHON_VERSION=3.6.15
RUN curl -LO https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz && \
    tar -xvzf Python-${PYTHON_VERSION}.tgz && \
    cd Python-${PYTHON_VERSION} && \
    ./configure --prefix=/usr/local --with-openssl=/usr/local --enable-optimizations --enable-shared && \
    make -j$(nproc) && make altinstall && \
    cd .. && rm -rf Python-${PYTHON_VERSION}*

# Symlink python3 and pip3
RUN ln -sf /usr/local/bin/python3.6 /usr/bin/python3 && \
    ln -sf /usr/local/bin/pip3.6 /usr/bin/pip3

RUN python3.6 -m pip install --upgrade pip

RUN /usr/local/bin/openssl version -a

CMD ["python3"]
